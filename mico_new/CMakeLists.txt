cmake_minimum_required(VERSION 2.8.1)

if(ver STREQUAL "release")
    #set(CMAKE_CXX_FLAGS_RELEASE "-O2 -Wall -std=c++0x")
    set(CMAKE_CXX_FLAGS_RELEASE "-O2 -Wall -std=c++11")
    #add_compile_options(-O2)
    add_definitions(-DNDEBUG)
    set(CMAKE_BUILD_TYPE release)
else(ver STREQUAL "release")
    set(CMAKE_BUILD_TYPE debug)
    #set(CMAKE_CXX_FLAGS_DEBUG "-g -Wall -std=c++0x")
    set(CMAKE_CXX_FLAGS_DEBUG "-g -Wall -std=c++11")
    #add_compile_options(-g)
    add_definitions(-D_DEBUG_VERSION)
    add_definitions(-DDEBUG_VERSION)
endif(ver STREQUAL "release")


link_directories(${PROJECT_BINARY_DIR})
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR})
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR})
#if (ver STREQUAL "release")
#    #link_directories(rbin/)
#    #SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/rbin)
#else(ver STREQUAL "release")
#    #link_directories(dbin/)
#    #SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/dbin)
#    #SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/dbin)
#endif(ver STREQUAL "release")

add_subdirectory(thread/)
#add_subdirectory(mysqlcli/)
add_subdirectory(Crypt/)
add_subdirectory(msgqueue/)
#add_subdirectory(DatabaseSrv/)
#add_subdirectory(ApplicationSrv/IntConnSrv/)
add_subdirectory(RelaySrv/)
#add_subdirectory(ExtConnSrv/)
add_subdirectory(NotificationSrv/)
add_subdirectory(LogicalSrv/)
add_subdirectory(delsceneserver/)
add_subdirectory(dbproxy/)
add_subdirectory(logserver/)
add_subdirectory(report/)
add_subdirectory(connectionserver/)
add_subdirectory(servermonitormaster/)
add_subdirectory(fcgi/)

